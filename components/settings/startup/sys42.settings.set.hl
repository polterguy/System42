
/*
 * Creates the Active Event that sets application specific setting(s).
 *
 * Arguments;
 *
 * [app]          - Name of application to which setting belongs.
 * [username]     - Username to which settings belongs to.
 * [src]          - Value of setting. Can either be a lambda, or a simple value.
 */
create-event:sys42.settings.set

  /*
   * Sanity check
   */
  if:x:/../*/app?value
    not
    or:x:/../*/app?value
      =:
    throw:No application specified!

  /*
   * Retrieving currently logged in user, checking if user as "root", and if a specific user was supplied.
   */
  whoami
  if:x:/@whoami/*/role?value
    =:root
    and:x:/../*/username?value

    /*
     * Changing user to set setting for in [delete-data] and [insert-data] below.
     */
    set:x:/../*(/delete-data/0|/insert-data/*/1)?value
      src:x:/../*/username?value

  else-if:x:/../*/username?value

    /*
     * Non root account tried to change setting for another user!
     */
    throw:Only root accounts can retrieve settings for other users than the currently logged in identity user

  delete-data:x:@"/*/*/sys42.app-settings/*/username/={0}/./*/app-name/""={1}""/./*/""{2}""/."
    :x:/@whoami/*/username?value
    :x:/../*/app?value
    :x:/../*/_arg?value

  /*
   * Checking if new setting was provided, or if this was a "delete setting" invocation.
   */
  if:x:/../*/src
    not
    return
  eval-x:x:/../*/insert-data/*/*
  add:x:/../*/insert-data/*
    src:x:/../*/src
  set:x:/../*/insert-data/*/*/src?name
    src:x:/../*/_arg?value
  insert-data
    sys42.app-settings
      app-name:x:/../*/app?value
      username:x:/@whoami/*/username?value


