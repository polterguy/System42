
/*
 * Creates the event that allows caller to translate a piece of text from one language to another.
 *
 * Pass in [_arg] as whatever you want to have translated, and [dest-lang] being the language you wish to have it translated to.
 *
 * Optionally pass in [src-lang], for explicitly informing event of what language your source text is in.
 * If no [src-lang] is specified, then "auto" will be assumed.
 *
 * Example of some [lang]s you could use are; "en" English, and "no" for Norwegian, or "NB-no" for Norwegian Bokm√•l and "en-US"
 * for American English.
 */
create-event:sys42.translate

  /*
   * Checking if an explicit [src-lang] was specified, and if not, defaulting source language to "auto"
   */
  if:x:/../*/src-lang
    not
    or:x:/../*/src-lang?value
      not
    insert-before:x:/../0
      src
        src-lang:auto

  /*
   * URL encoding text.
   */
  p5.html.url-encode:x:/../*/_arg?value

  /*
   * Invoking Google Translate with URL encoded text.
   */
  p5.http.get:"https://translate.googleapis.com/translate_a/single?client=gtx&ie=UTF-8&sl={0}&tl={1}&dt=t&q={2}"
    :x:/../*/src-lang?value
    :x:/../*/dest-lang?value
    :x:/@p5.html.url-encode?value
  split:x:/@p5.http.get/**/content?value.string
    =:@"["
    =:@"]"
  _ret
  set:x:/@split/*/%2
  for-each:x:/@split/*?name
    index-of:x:/@_dp?value
      src:,
    if:x:/@index-of/*
      not
      break
    split:x:/@_dp?value
      =:@""""
    set:x:/@_ret?value
      src:{0}{1}
        :x:/@_ret?value
        :x:/@split/0?name

  /*
   * Making sure we explicitly remove the [src-lang], since it might have been dynamically created, 
   * to avoid returning temporary nodes.
   */
  set:x:/../*/src-lang

  /*
   * Then we return the translated text.
   */
  return:x:/@_ret?value
