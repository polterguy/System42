/*
 * Phosphorus Five, copyright 2014 - 2017, Thomas Hansen, thomas@gaiasoul.com
 * 
 * This file is part of Phosphorus Five.
 *
 * Phosphorus Five is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3, as published by
 * the Free Software Foundation.
 *
 *
 * Phosphorus Five is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Phosphorus Five.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * If you cannot for some reasons use the GPL license, Phosphorus
 * Five is also commercially available under Quid Pro Quo terms. Check 
 * out our website at http://gaiasoul.com for more details.
 */





/*
 * First the styles for "ul" HTML elements.
 */


/*
 * Making sure we remove the default "ul" styles for the TreeView, to remove list-style and padding "ul" elements are
 * rendered with by default.
 */
.tree-widget-default ul.tree-item-children {
    padding-left:0;
    list-style:none;
}


/*
 * Making sure we hide "ul" elements, that are shown, but hidden afterwards, by a collapse operation.
 */
.tree-widget-default ul.tree-hidden {
    display:none;
}





/*
 * Then the styles for "li" HTML elements.
 */


/*
 * Making sure items by default are indented with 16px, and that background images does not repeat by default.
 */
.tree-widget-default li.tree-item {
    padding-left:16px;
    background-repeat:no-repeat;
}


/*
 * Making sure 1st level elements have NO indentation at all.
 *
 * 1st level items, are supposed to align up with the left border of the root TreeView widget.
 * We do this by removing the indentation for ONLY 1st level items, overriding what we did in the above class for 1st level elements.
 */
.tree-widget-default > ul.tree-item-children > li.tree-item {
    padding-left:0;
}


/*
 * Making sure children items of expanded items have the 3 way cross line.
 * In addition, we make sure all expanded items more than 1st level have the correct lines, which means starting with the
 * 3 way cross, for then to continue with the single vertical line, repeating this vertical line, for the height of element.
 *
 * Notice, since the first class selector below, never becomes taller than the height of a single element, we can combine these
 * to class selectors into one, since the last background, will never show for the first selector.
 */
.tree-widget-default li.tree-expanded > ul.tree-item-children > li.tree-item,
.tree-widget-default > ul.tree-item-children > li.tree-item > ul.tree-item-children li.tree-expanded {
    background-image:url(tree-1.png), url(tree-2.png);
    background-position:0 -100px, 0 0;
    background-repeat:no-repeat, repeat-y;
}


/*
 * Making sure that the last child of an expanded item has the corner line, turning 90 degrees to the right.
 * In addition making sure all last li elements of more than 1st level expanded items have the same background.
 */
.tree-widget-default li.tree-expanded > ul.tree-item-children > li.tree-item:last-child,
.tree-widget-default > ul.tree-item-children > li.tree-item > ul.tree-item-children li.tree-expanded:last-child {
    background-image:url(tree-3.png);
    background-position:0 0;
}


/*
 * Animations for showing children items during expansion of children items.
 */
@keyframes tree-item-children-animation-child-li {
    0% {
        opacity:0;
        margin-left:-80px;
    }
    100% {
        opacity:1;
        margin-left:0;
    }
}


/*
 * The animation class for showing children items of an item.
 */
.tree-widget-default ul.tree-item-children-animate > li.tree-item {
    opacity:0;
    animation-name: tree-item-children-animation-child-li;
    animation-duration: .3s;
    animation-fill-mode:forwards;
}


/*
 * To create a "snake curling effect", we delay the animations for 0.05 additional seconds, for every children
 * element, beneath another item during expansion.
 * Notice, we roundtrip the animation delay, after 10 items, which means if you have more than 10 children items, it
 * will create "multiple snake animations".
 */
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+1) {
    animation-delay:.05s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+2) {
    animation-delay:.1s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+3) {
    animation-delay:.15s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+4) {
    animation-delay:.20s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+5) {
    animation-delay:.25s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+6) {
    animation-delay:.30s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+7) {
    animation-delay:.35s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+8) {
    animation-delay:.40s;
}
.tree-widget-default ul.tree-item-children-animate > li.tree-item:nth-child(10n+9) {
    animation-delay:.45s;
}





/*
 * Then the styles for the hyperlinks inside of "li" elements.
 */


/*
 * Making sure a leaf node item has no icon, but rather a single horizontal line.
 */
.tree-widget-default li.tree-expanded > ul.tree-item-children > li.tree-leaf a.tree-item-label {
    background-position:0 -80px;
}


/*
 * Making sure the label by default, gets the "+" icon, and is indented to the right, by the size of its icon.
 * In addition we must make it a block level element, such that we can modify its height, and also such that it creates a 
 * "list element selection" type when clicking and hovering element, to make it easier to see which items one has selected and is hovering.
 */
.tree-widget-default a.tree-item-label {
    padding-left:16px;
    background-image:url(tree-1.png);
    background-position:0 -40px;
    background-repeat:no-repeat;
    text-decoration:none;
    display:block;
    height:100%;
}


/*
 * Overriding the above "+" style, with a "-" icon for expanded items.
 */
.tree-widget-default li.tree-expanded > a.tree-item-label {
    background-position:0 -60px;
}


/*
 * Making sure when user hovers an item, he can clearly see which item he is hovering.
 */
.tree-widget-default a.tree-item-label:hover {
    background-color:rgba(0,0,0,.1);
}


/*
 * Selected item class for label (hyperlink) of selected tree items.
 */
.tree-widget-default li.tree-item > a.tree-selected {
    background-color:rgba(128,255,128,.3);
}





/*
 * Then the styles for the icons, inside our hyperlinks.
 */


/*
 * Animation for icons, which simply "flashes" the icon to yellow, before settling on "light green"
 */
@keyframes tree-item-animate-icon {
    0% {
        color:rgba(255,255,255,0);
    }
    30% {
        color:rgba(255,255,128,1);
    }
    100% {
        color:rgba(128,128,255,.5);
    }
}


/*
 * Making sure glyphicon classes, which are the default icons for widget, have some nice animations, and margin, to
 * give room for the label's text that follows.
 */
.tree-widget-default a.tree-item-label .glyphicon {
    width:16px;
    height:14px;
    display:inline-block;
    margin-right:3px;
    margin-top:2px;
    margin-bottom:-2px;
    animation-name:tree-item-animate-icon;
    animation-duration: 1s;
    animation-fill-mode:forwards;
}

.tree-widget-default a.tree-item-label .folder {
    background-image: url(tree-1.png);
}

.tree-widget-default a.tree-item-label .glyphicon-folder-open {
    background-position:0 -20px;
}



