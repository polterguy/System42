
/*
 * Creates an input type of control, according to cell's type.
 *
 * Expects [_arg] being ID of datagrid, [value], [column], [row] and [hyperlink] being the hyperlink that was actually clicked.
 */
create-event:sys42.widgets.datagrid._edit-cell

  /*
   * Figuring our parent of hyperlink, which is "td" cell, such that we can create our textbox as a child widget of that widget.
   */
  p5.web.widgets.get-parent:x:/../*/hyperlink?value

  /*
   * Figuring out type of textbox to use for editing.
   */
  p5.web.widgets.property.get:x:/../*/hyperlink?value
    _type
  if:x:/@p5.web.widgets.property.get/*/*?value

    /*
     * An explicit type declaration for our input widget was declared when item was fetched, making sure we use it.
     */
    set:x:/../*/p5.web.widgets.create-void/*/type?value
      src:x:/@p5.web.widgets.property.get/*/*?value


  /*
   * Creating a textbox for editing value of entity.
   */
  eval-x:x:/+/*(/parent|/value|/_column|/_row)
  p5.web.widgets.create-void
    element:input
    type:text
    class:form-control
    parent:x:/@p5.web.widgets.get-parent/*/*?value
    value:x:/../*/value?value
    _column:x:/../*/column?value
    _row:x:/../*/row?value
    onkeydown:@"return p5.sys42_widgets_datagrid_onkeydown(event);"
    oninit

      /*
       * Making sure textbox gets initial focus.
       */
      p5.web.send-javascript:@"p5.$('{0}').el.focus();p5.$('{0}').el.select();"
        :x:/../*/_event?value

    /*
     * Making sure we trap [onblur] such that we can delete textbox again.
     */
    onblur

      /*
       * Deleting textbox.
       * Notice, we do not set focus here, since user probably blurred item by setting focus to something else.
       */
      p5.web.widgets.delete:x:/../*/_event?value

    /*
     * Invisible Ajax event, referenced from JavaScript, to delete textbox.
     */
    .onesc

      /*
       * Deleting textbox, and setting focus to hyperlink.
       */
      p5.web.widgets.get-parent:x:/../*/_event?value
      p5.web.widgets.find:x:/@p5.web.widgets.get-parent/*/*?value
        element:a
      p5.web.send-javascript:@"p5.$('{0}').el.focus();"
        :x:/@p5.web.widgets.find/*/*?value
      p5.web.widgets.delete:x:/../*/_event?value

    /*
     * Invisible Ajax event, referenced from JavaScript, to delete textbox, and update edited item.
     */
    .onenter

      /*
       * Fetching new value, and notifying [.on-edit-item] lambda callback supplied during creation that item has been edited.
       */
      p5.web.widgets.property.get:x:/../*/_event?value
        value
        _column
        _row
      p5.web.widgets.find-ancestor:x:/../*/_event?value
        _current-page

      /*
       * Making sure content becomes "&nbsp;" if no new value was actually provided.
       */
      if:x:/@p5.web.widgets.property.get/*/*/value?value
        =:

        /*
         * User provided empty ("") value.
         * Making sure hyperlink doesn't disappear, by adding up "&nbsp;" as content.
         */
        set:x:/@p5.web.widgets.property.get/*/*/value?value
          src:&nbsp;

      eval-x:x:/+/*
      sys42.widgets.datagrid._edit-cell-callback:x:/@p5.web.widgets.find-ancestor/*/*?value
        value:x:/@p5.web.widgets.property.get/*/*/value?value
        column:x:/@p5.web.widgets.property.get/*/*/_column?value
        row:x:/@p5.web.widgets.property.get/*/*/_row?value

      /*
       * Checking if callback accepted new value.
       */
      if:x:/@sys42.widgets.datagrid._edit-cell-callback?value

        /*
         * Success, input was acccepted.
         * Deleting textbox, setting focus to hyperlink, and updating value of hyperlink.
         */
        p5.web.widgets.get-parent:x:/../*/_event?value
        p5.web.widgets.find:x:/@p5.web.widgets.get-parent/*/*?value
          element:a
        p5.web.send-javascript:@"p5.$('{0}').el.focus();"
          :x:/@p5.web.widgets.find/*/*?value
        p5.web.widgets.property.set:x:/@p5.web.widgets.find/*/*?value
          innerValue:x:/@p5.web.widgets.property.get/*/0?value
        p5.web.widgets.delete:x:/../*/_event?value

      else

        /*
         * Setting textbox in "error mode".
         */
        p5.web.widgets.get-parent:x:/../*/_event?value
        sys42.utilities.add-css-classes:x:/@p5.web.widgets.get-parent/*/*?value
          class:has-error

        /*
         * Selecting all text, and giving focus to textbox, trying to avoid jQuery dependency, if we can.
         */
        p5.web.send-javascript:@"p5.$('{0}').el.focus();p5.$('{0}').el.select();"
          :x:/../*/_event?value

  /*
   * Passing in JavaScript to detect ESC and carriage return.
   */
  p5.web.include-javascript:@"
p5.sys42_widgets_datagrid_onkeydown = function (e) {
if(e.keyCode == 27) {
p5.$(e.target.id).raise('.onesc');
return false;
} else if(e.keyCode == 13) {
p5.$(e.target.id).raise('.onenter');
return false;
}
}"
