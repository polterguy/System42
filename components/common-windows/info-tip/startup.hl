
/*
 * Creates the Active Event that shows the user a small informational dropdown window, providing feedback to user.
 *
 * Arguments;
 *
 * [_arg]            - Message, or epxression leading to message, you wish to display to user.
 * [class]           - Override the default CSS class. Defaults to "info-window".
 * [parent]          - Override the default parent widget. Defaults to "content".
 *
 * You cannot show more than one instance of this window at the time
 */
create-event:sys42.windows.info-tip

  /*
   * Applying options for widget, with default values.
   * This lambda uses the boolean algebraic "OR" operator, combined with /$ (unique name), ending
   * up prioritizing specified argument, resorting to [_default] value if not given
   */
  _defaults
    _arg:You should really have provided some text here as value of invocation ...
    class:info-window
    parent:cnt
  _options
  add:x:/@_options
    src:x:(/@_defaults(/--!/_arg)|/@_defaults/*)/$

  /*
   * Making sure we delete any previously created windows
   * Notice that sice we only hide the window when it is closed, we need
   * to check if any previous windows exist, and if so, delete them, before 
   * we create any new ones.
   */
  if
    fetch:x:/0/0?value
      p5.web.widgets.exists:info-window
    p5.web.widgets.delete:info-window

  /*
   * Creating actual info window, making sure we forward evaluate all arguments first.
   */
  eval-x:x:/+/*|/+/*/*/*
  p5.web.widgets.create-container:info-window
    parent:x:/../*/_options/*/parent?value
    class:x:/../*/_options/*/class?value
    widgets
      literal
        innerValue:x:/../*/_options/*/_arg?value
