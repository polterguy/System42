
/*
 * Responsible for loading up page of type [lambda]
 */

/*
 * Verifying user has access to [p5.page] object first.
 */
if
  sys42.cms.verify-access:x:/../*/_args/*/role?value

  /*
   * Loading up our template, unless it is "".
   */
  if:x:/../*/_args/*/template?value
    !=:
    p5.io.file.load:x:/../*/_args/*/template?value

    /*
     * Removing literal:{content} altogether, and evaluating template just loaded.
     */
    set:x:/-/*/*/p5.web.widgets.create-container/*/widgets/**/={content}/.
    eval:x:/./*/p5.io.file.load/*


  /*
   * Then making sure we modify the "header" and title of page.
   *
   * Notice, we do this before we evaluate database lambda object, in case it overrides 
   * the header and/or title in its code.
   */
  if
    fetch:x:/0/0?value
      p5.web.widgets.exists:header
    p5.web.widgets.property.set:header
      innerValue:x:/../*/_args/*/name?value
  p5.web.page.set-title:x:/../*/_args/*/name?value

  /*
   * Now we can evaluate [lambda] from database, making sure we provide "clue" to which URL is evaluated.
   */
  hyper2lambda:x:/../*/_args/*/lambda?value
  set:x:/-?name
    src:x:/../*/_url?value
  eval:x:/-2

else

  /*
   * Loading page that shows user does not have access to object.
   */
  sys42.utilities.execute-lambda-file:@CMS/page-loader/special-page/no-access.hl
    _template:@CMS/page-templates/default.hl


