
/*
 * Settings for page button.
 */
button
  innerValue:@"<span class=""glyphicon glyphicon-wrench""></span> Settings ..."
  class:btn btn-default diffuse btn-attach-top
  onclick

    /*
     * Retrieving page properties, and using a wizard window to allow user to change them.
     */
    sys42.cms.get-edited-page-id
    p5.data.select:x:@"/*/*/""={0}"""
      :x:/@sys42.cms.get-edited-page-id?value

    /*
     * Making sure we first add [name], before we add [url] and the finally the last properties,
     * to have some intuitive order of [data] according to "importance".
     */
    add:x:/../*/sys42.windows.wizard/*/data
      src:x:/@p5.data.select/*/*/name
    add:x:/../*/sys42.windows.wizard/*/data
      src:@"url:{0}"
        :x:/../*/sys42.cms.get-edited-page-id?value
    add:x:/../*/sys42.windows.wizard/*/data
      src:x:/@p5.data.select/*/*(/template|/role)

    /*
     * Making sure we change the [template] data segment to a "drop down selection" type
     * of [data] segment, by appending our choices to it as [_options].
     * This is done by fetching all files from "/system42/apps/CMS/page-templates/", and
     * using these as choices for user.
     */
    p5.io.folder.list-files:@CMS/page-templates/
      filter:hl
    for-each:x:/-/*?name
      p5.string.split:x:/..for-each/*/_dp?value
        =:/
        =:.
      add:x:/./+/*/*
        src:@"{0}:{1}"
          :x:/..for-each/*/p5.string.split/0/-2?name
          :x:/..for-each/*/_dp?value
    add:x:/../*/sys42.windows.wizard/*/data/*/template
      src
        _options
          none:

    /*
     * Making sure we change the [role] data segment to a "drop down selection" type
     * of [data] segment, by appending our choices to it as [_options].
     * This is done by fetching all distinct user roles, in addition to appending a 
     * static "empty" role (no restrictions for access).
     */
    p5.auth.roles.list
    for-each:x:/-/*?name
      add:x:/./+/*/*
        src:@"{0}:{0}"
          :x:/..for-each/*/_dp?value
    add:x:/../*/sys42.windows.wizard/*/data/*/role
      src
        _options

    /*
     * Showing actual wizard window.
     */
    sys42.windows.wizard
      header:Settings
      data
      .oncancel

        /*
         * Making sure we set focus to "select page dropdown" if user closes dialogue, without
         * pressing "OK".
         */
        p5.web.send-javascript:@"$('#cms-select-page').focus().select();"
      .onok

        /*
         * Getting wizard window's values.
         */
        sys42.windows.wizard.get-values

        /*
         * Retrieving currently edited page.
         */
        sys42.cms.get-edited-page-id
        p5.data.select:x:@"/*/*/""={0}"""
          :x:/@sys42.cms.get-edited-page-id?value
        _old-name:x:/-/*/*/name?value
        eval-x:x:/-

        /*
         * Checking if user changed URL, at which point we must check that URL does not exist from before.
         */
        if:x:/../*/sys42.windows.wizard.get-values/*/url?value
          !=:x:/@sys42.cms.get-edited-page-id?value

          /*
           * User changed URL, making sure new URL does not exist from before.
           */
          if
            p5.data.select:x:@"/*/*/""={0}""?count"
              :x:/../*/sys42.windows.wizard.get-values/*/url?value
            !=:int:0

            /*
             * Oops, user chose a new URL that was already taken by another page.
             * Showing user some feedback, and returning early (with error).
             */
            sys42.windows.info-tip:That URL is already taken by another page ...
              class:info-window info-window-error
              parent:sys42-windows-modal-body-wrapper
            p5.web.widgets.find:sys42-windows-modal-body-wrapper
              _data-field-name:url
            p5.web.widgets.get-parent:x:/-/*/*?value
            sys42.utilities.add-css-classes:x:/-/*/*?value
              class:has-error
            p5.web.send-javascript:@"$('#{0}').focus().select();"
              :x:/./-3/*/*?value
            return:bool:false

          /*
           * Making sure we update "currently edited page".
           */
          sys42.cms.set-currently-edited-page:x:/../*/sys42.windows.wizard.get-values/*/url?value

        /*
         * Updating page properties, by first changing [p5.data.select]'s result, for then to move [p5.data.select]'s
         * result into an [p5.data.update] invocation.
         */
        set:x:/../*/p5.data.select/*/*/name?value
          src:x:/../*/sys42.windows.wizard.get-values/*/name?value
        set:x:/../*/p5.data.select/*?value
          src:x:/../*/sys42.windows.wizard.get-values/*/url?value
        set:x:/../*/p5.data.select/*/*/template?value
          src:x:/../*/sys42.windows.wizard.get-values/*/template?value
        set:x:/../*/p5.data.select/*/*/role?value
          src:x:/../*/sys42.windows.wizard.get-values/*/role?value

        /*
         * Now we can move [p5.page] from [p5.data.select] into [p5.data.update].
         */
        add:x:/../*/p5.data.update/*/src
          src:x:/@p5.data.select/*

        /*
         * Finally, updating properties for page, and providing feedback to user.
         */
        p5.data.update:x:@"/*/*/p5.page/""={0}"""
          :x:/../*/sys42.cms.get-edited-page-id?value
          src
        sys42.windows.info-tip:Page '{0}' was saved.
          :x:/../*/sys42.windows.wizard.get-values/*/name?value

        /*
         * If either name or URL changed, we reload select dropdown, and repopulate it.
         */
        if:x:/../*/sys42.windows.wizard.get-values/*/url?value
          !=:x:/../*/sys42.cms.get-edited-page-id?value
          or:x:/../*/sys42.windows.wizard.get-values/*/name?value
            !=:x:/../*/_old-name?value

          /*
           * Repopulating select page dropdown.
           */
          sys42.cms.populate-select-page
          sys42.cms.create-navbar-menu

        /*
         * Returning success to wizard modal window.
         */
        return:bool:true
