
/*
 * Creating our uploader widget, such that user can drag and drop upload pages to the CMS.
 *
 * Notice, we default its visibility to false, and change its visibility, whenever a page is edited, or editing is stopped.
 */
create-widget:cms-ajax-uploader
  parent:cnt
  visible:false
  widgets


    /*
     * The uploader widget, notice, it wraps all other widgets on page!
     */
    sys42.widgets.uploader:cms-uploader-widget
      filter:hl
      allow-multiple:false
      class:uploader-full-screen
      clickable:false
      .onupload

        /*
         * Sanity ckecking page definition file just uploaded, by converting to lambda, to see if exception occurs, and
         * verify it contains the correct root nodes.
         */
        hyper2lambda:x:/../*/_content?value
        if:x:/@hyper2lambda/*?count
          !=:int:1
          or:x:/@hyper2lambda/*?name
            !=:p5.page

          /*
           * Oops, error. Showing user clues about error, and returning early.
           */
          sys42.windows.info-tip:Sorry, we can only handle one root element, and it must be of type [p5.page].
            class:info-window-error info-window info-window-longer
          return

        /*
         * Making sure URL of page is unique, and if not, we ask user if he wants to overwrite existing URL, or
         * create a new URL.
         */
        p5.data.select:x:@"/*/*/p5.page/""={0}"""
          :x:/../*/hyper2lambda/*?value
        if:x:/@p5.data.select/*?count
          =:int:0

          /*
           * Page did not exist from before, simply inserting as is, and start editing it.
           */
          add:x:/..if/*/p5.data.insert
            src:x:/@hyper2lambda/*
          p5.data.insert
          sys42.cms.set-currently-edited-page:x:/@hyper2lambda/*?value
          sys42.cms.populate-select-page
          sys42.cms.edit-page
          p5.web.send-javascript:@"$('#cms-select-page').focus();"
          sys42.cms.create-navbar-menu

        else

          /*
           * Oops, page exist from before.
           * Figuring out next available URL that at least partially resembles the specified URL, 
           * and using that as the "default value", asking user if he wants to overwrite, or create a new page.
           */
          p5.web.session.set:sys42.cms.uploaded-page
            src:x:/@hyper2lambda/*
          p5.data.select:x:/*/*/p5.page/"=~{0}"
            :x:/@hyper2lambda/*?value
          _high:int:2
          for-each:x:/@p5.data.select/*?value
            p5.string.split:x:/@_dp?value
              =:-
            if
              p5.types.can-convert:x:/@p5.string.split/0/-?name
                type:int
              and:x:/@p5.string.split/0/-?name.int
                >=:x:/@_high?value
              set:x:/@_high?value
                +:x:/@p5.string.split/0/-?name.int
                  _:1

          /*
           * Forward evaluate [_url] inside of wizard window.
           */
          eval-x:x:/+/**/data/*/url
          sys42.windows.wizard
            header:Page exist from before
            body:@"There is already a page in your CMS with the same URL. Do you wish to overwrite it, or create a new page?"
            buttons
              button
                class:btn btn-default
                innerValue:Save as new page
                onclick

                  /*
                   * This bugger, we simply forward to [.onok], since it'll retrieve our data field values.
                   */
                  sys42.windows.modal.ok

              button
                class:btn btn-default
                innerValue:Overwrite old page
                onclick

                  /*
                   * Here we simply use the original values, to overwrite the existing page from database.
                   */
                  p5.web.session.get:sys42.cms.uploaded-page
                  add:x:/../*/p5.data.update/*/src
                    src:x:/@p5.web.session.get/*/*

                  /*
                   * Inserts the page into database, populated from above logic.
                   */
                  p5.data.update:x:@"/*/*/p5.page/""={0}"""
                    :x:/@p5.web.session.get/*/*?value
                    src

                  /*
                   * Sets currently edited page, before we close dialogue, and repopulate select dropdown, and start
                   * editing page.
                   */
                  sys42.cms.set-currently-edited-page:x:/@p5.web.session.get/*/*?value
                  sys42.windows.modal.close
                  sys42.cms.populate-select-page
                  sys42.cms.edit-page
                  p5.web.send-javascript:@"$('#cms-select-page').focus();"
                  sys42.cms.create-navbar-menu

            .onok

              /*
               * Checking if user provided a URL to a page that already exists, which is not kosher.
               */
              p5.data.select:x:@"/*/*/p5.page/""={0}"""
                :x:/../*/data/*/url?value
              if:x:/@p5.data.select/*?count
                !=:int:0

                /*
                 * User supplied a page that was already existing.
                 * Informing user, and returning early.
                 */
                sys42.windows.info-tip:That page already exists
                  parent:sys42-windows-modal-body-wrapper
                  class:info-window info-window-error
                p5.web.widgets.find:sys42-windows-modal-body-wrapper
                  _data-field-name:url
                p5.web.widgets.get-parent:x:/@p5.web.widgets.find/*/*?value
                sys42.utilities.add-css-classes:x:/@p5.web.widgets.get-parent/*/*?value
                  class:has-error
                return:bool:false

              /*
               * Now we know user provided a unique URL, fetching page from session, updating URL, saving page to database with new URL,
               * before we finally close window, and reload location to repopulate select dropdown and allow user to edit page.
               */
              p5.web.session.get:sys42.cms.uploaded-page
              set:x:/@p5.web.session.get/*/*?value
                src:x:/../*/data/*/url?value
              add:x:/../*/p5.data.insert
                src:x:/@p5.web.session.get/*/*

              /*
               * Inserts the page into database, populated from above logic.
               */
              p5.data.insert

              /*
               * Sets currently edited page, before we close dialogue, and repopulate select dropdown, and start
               * editing page.
               */
              sys42.cms.set-currently-edited-page:x:/../*/data/*/url?value
              sys42.windows.modal.close
              sys42.cms.populate-select-page
              sys42.cms.edit-page
              p5.web.send-javascript:@"$('#cms-select-page').focus();"
              sys42.cms.create-navbar-menu

            data
              url:{0}-{1}
                :x:/@hyper2lambda/*?value
                :x:/@_high?value

