
/*
 * Unit tests for [eval].
 */


Evaluate expression lambda
  _x
    set:x:/@_x?value
      src:success
  eval:x:/@_x
  if:x:/@eval
    !=:node:@"eval:success"
    throw:Assert error, [eval] misbehaved


Evaluate lambda block
  eval
    return:success
  if:x:/@eval
    !=:node:@"eval:success"
    throw:Assert error, [eval] misbehaved


Returns single node
  _x
    insert-before:x:
      src
        result:success
  eval:x:/@_x
  if:x:/@eval
    !=:node:@"eval
  result:success"
    throw:Assert error, [eval] misbehaved


Returns multiple nodes
  _x
    insert-before:x:
      src
        result1:success1
        result2:success2
  eval:x:/@_x
  if:x:/@eval
    !=:node:@"eval
  result1:success1
  result2:success2"
    throw:Assert error, [eval] misbehaved


Return node value result
  eval
    set:x:/..?value
      src
        foo:bar
  if:x:/@eval
    !=:node:@"eval:node:""foo:bar"""
    throw:Assert error, [eval] misbehaved


Pass in argument
  _x
    set:x:/..?value
      src:"{0}-success"
        :x:/../*/_data?value
  eval:x:/@_x
    _data:very-much
  if:x:/@eval?value
    !=:very-much-success
    throw:Assert error, [eval] misbehaved


Pass in reference argument
  _input:success
  _x
    set:x:/..?value
      src:"{0}-{1}"
        :x:/../*/_data?value
        :x:/../*/_data2/#/../*/_input?value
  set:x:/+/*/_data2?value
    src:x:/..
  eval:x:/@_x
    _data:very-much
    _data2
  if:x:/@eval?value
    !=:very-much-success
    throw:Assert error, [eval] misbehaved


Do not evaluate illegal event

  // This is an actual event in system, but should not be evaluated, since it starts with a ".".
  .p5.core.application-folder
  if:x:/-?value
    throw:Assert error, [eval] misbehaved


Eval avoiding lambda injection

  _x1
    return
      success1
  _x2
    return
      success2
  _x3
  eval:x:/--
    throw:Foo bar
  if:x:/-
    !=:node:@"eval
  success2
  success1"
    throw:Assert error, [eval] misbehaved


Eval expression yielding multiple evaluations with args

  _x1
    eval-x:x:/+/*
    return
      success1:x:/../*/_success?value
  _x2
    eval-x:x:/+/*
    return
      success2:x:/../*/_success?value
  _x3
    return:More success
  eval:x:/--
    _success:yup
  if:x:/-
    !=:node:@"eval:More success
  success2:yup
  success1:yup"
    throw:Assert error, [eval] misbehaved
