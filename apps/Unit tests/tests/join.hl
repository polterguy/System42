
/*
 * Unit tests for [p5.string.join].
 */


Join on names
  _data
    foo1
    foo2
    foo3
  p5.string.join:x:/@_data/*?name
  if:x:/@p5.string.join?value
    !=:foo1foo2foo3
    throw:Assert error, [p5.string.join] misbehaved


Join with constant separator
  _data
    foo1
    foo2
    foo3
  p5.string.join:x:/@_data/*?name
    sep:,
  if:x:/@p5.string.join?value
    !=:foo1,foo2,foo3
    throw:Assert error, [p5.string.join] misbehaved


Join with expression to separator
  _sep:-
  _data
    foo1
    foo2
    foo3
  p5.string.join:x:/@_data/*?name
    sep:x:/@_sep?value
  if:x:/@p5.string.join?value
    !=:foo1-foo2-foo3
    throw:Assert error, [p5.string.join] misbehaved


Join with constant wrapper
  _data
    foo1
    foo2
    foo3
  p5.string.join:x:/@_data/*?name
    wrap:'
  if:x:/@p5.string.join?value
    !=:'foo1''foo2''foo3'
    throw:Assert error, [p5.string.join] misbehaved


Join with expression to wrapper
  _wrap:'
  _data
    foo1
    foo2
    foo3
  p5.string.join:x:/@_data/*?name
    wrap:x:/@_wrap?value
  if:x:/@p5.string.join?value
    !=:'foo1''foo2''foo3'
    throw:Assert error, [p5.string.join] misbehaved


Join with expression to wrapper and separator
  _wrap:'
  _sep:,
  _data
    foo1
    foo2
    foo3
  p5.string.join:x:/@_data/*?name
    wrap:x:/@_wrap?value
    sep:x:/@_sep?value
  if:x:/@p5.string.join?value
    !=:'foo1','foo2','foo3'
    throw:Assert error, [p5.string.join] misbehaved
