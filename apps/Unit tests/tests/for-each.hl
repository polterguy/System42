
/*
 * Unit tests for [for-each].
 */


Iterate multiple values
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*?value
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp?value
  if:x:/../0?value
    !=:bar1bar2
    throw:Assert error, [for-each] misbehaved


Iterate multiple names
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*?name
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp?value
  if:x:/../0?value
    !=:foo1foo2
    throw:Assert error, [for-each] misbehaved


Iterate multiple nodes
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp/#?node.string
  if:x:/@_data?value
    !=:@"foo1:bar1foo2:bar2"
    throw:Assert error, [for-each] misbehaved


Break iteration
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp/#?node.string
    break
    set:x:/@_data?value
      src:error
  if:x:/@_data?value
    !=:@"foo1:bar1"
    throw:Assert error, [for-each] misbehaved


Continue iteration
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*
    if:x:/@_dp/#?value
      =:bar1
      continue
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp/#?node.string
  if:x:/@_data?value
    !=:@"foo2:bar2"
    throw:Assert error, [for-each] misbehaved


Break nested iteration
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*?value
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp?value
    for-each:x:/@_data/*?value
      set:x:/@_data?value
        src:{0}{1}
          :x:/@_data?value
          :x:/@_dp?value
      break
      set:x:/@_data?value
        src:error
  if:x:/@_data?value
    !=:bar1bar1bar2bar1
    throw:Assert error, [for-each] misbehaved


Continue nested iteration
  _data
    foo1:bar1
    foo2:bar2
  for-each:x:/@_data/*?value
    set:x:/@_data?value
      src:{0}{1}
        :x:/@_data?value
        :x:/@_dp?value
    for-each:x:/@_data/*?value
      continue
      set:x:/@_data?value
        src:{0}{1}
          :x:/@_data?value
          :x:/@_dp?value
  if:x:/@_data?value
    !=:bar1bar2
    throw:Assert error, [for-each] misbehaved


Return from iteration
  try
    eval
      _data
        foo1:bar1
        foo2:bar2
      for-each:x:/@_data/*?value
        return:x:/@_dp?value

        // Should never be evaluated due to above [return].
        throw:Assert error, [for-each] misbehaved

      // Should never be evaluated due to above [return].
      throw:Assert error, [for-each] misbehaved
  finally
    if:x:/@try/*/eval?value
      !=:bar1
      throw:Assert error, [for-each] misbehaved


Iterate reference nodes
  _data:node:@"_foo
  foo1:bar1
  foo2:bar2"
  for-each:x:/@_data/#/*
    set:x:/@_dp/#?value
      src:success
  if:x:/@_data?value
    !=:node:@"_foo
  foo1:success
  foo2:success"
    throw:Assert error, [for-each] misbehaved
