
/*
 * Unit tests for [switch].
 */


Switch on constant string
  _result
  switch:foo
    case:non-existing
      set:x:/@_result?value
        src:error
    case:foo
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch on constant integer
  _result
  switch:int:1
    case:int:0
      set:x:/@_result?value
        src:error
    case:int:1
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch on constant boolean
  _result
  switch:bool:true
    case:bool:false
      set:x:/@_result?value
        src:error
    case:bool:true
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch on constant float
  _result
  switch:float:.57
    case:float:.58
      set:x:/@_result?value
        src:error
    case:float:.57
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch on expression
  _result
  _input:foo
  switch:x:/@_input?value
    case:non-existing
      set:x:/@_result?value
        src:error
    case:foo
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch and case on expression
  _result:foo
  _input:foo
  switch:x:/@_input?value
    case:x:/@_result?name
      set:x:/@_result?value
        src:error
    case:x:/@_result?value
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch with default
  _result
  switch:foo
    case:non-existing-1
      set:x:/@_result?value
        src:error
    case:non-existing-2
      set:x:/@_result?value
        src:error
    default
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch with fallthrough
  _result
  switch:foo
    case:foo
    case:non-existing
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch with fallthrough into default
  _result
  switch:foo
    case:non-existing
      set:x:/@_result?value
        src:error
    case:foo
    default
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch with null match
  _result
  switch
    case:non-existing
      set:x:/@_result?value
        src:error
    case
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch with null expression match
  _result
  switch:x:/@_non-existing-1?value
    case:non-existing
      set:x:/@_result?value
        src:error
    case:x:/@_non-existing-2?value
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Switch with null default match
  _result
  switch
    case:non-existing-1
      set:x:/@_result?value
        src:error
    case:non-existing-2
      set:x:/@_result?value
        src:error
    default
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Throw on no lambdas
  _result
  try
    switch
  catch
    set:x:/@_result?value
      src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Throw on two similar constant case
  _result
  try
    switch
      case:foo
      case:foo
        _foo
  catch
    set:x:/@_result?value
      src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Throw on two similar expression case
  _result
  _input
    foo
    foo
  try
    switch
      case:x:/@_input/0?name
        _foo
      case:x:/@_input/1?name
        _foo
  catch
    set:x:/@_result?value
      src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Throw on only empty case
  _result
  try
    switch
      case:foo-1
      case:foo-2
  catch
    set:x:/@_result?value
      src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Throw on only empty lambdas
  _result
  try
    switch
      case:foo-1
      case:foo-2
      default
  catch
    set:x:/@_result?value
      src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Throw on default having value
  _result
  try
    switch
      case:foo-1
      case:foo-2
        _foo
      default:foo
        _foo
  catch
    set:x:/@_result?value
      src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


No throw on only default
  switch
    default
      _foo


Multiple fallthroughs
  _result
  switch
    case:foo1
    case:foo2
    default
      set:x:/@_result?value
        src:success
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved


Default not evaluated if match
  _result
  switch:foo2
    case:foo1
    case:foo2
      set:x:/@_result?value
        src:success
    default
      set:x:/@_result?value
        src:error
  if:x:/@_result?value
    !=:success
    throw:Assert error, [switch] misbehaved
