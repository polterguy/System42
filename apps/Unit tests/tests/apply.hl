
/*
 * Unit tests for [apply].
 */


Single name
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
  if:x:/@_dest
    !=:node:@"_dest
  name:foo"
    throw:Assert error, [apply] misbehaved


Data item is static
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:static
  if:x:/@_dest
    !=:node:@"_dest
  name:static"
    throw:Assert error, [apply] misbehaved


Single formatted name
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:{0}-bar
        :x:?name
  if:x:/@_dest
    !=:node:@"_dest
  name:foo-bar"
    throw:Assert error, [apply] misbehaved


Value of data item is expression
  _data
    foo:x:?node
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {value}:x:?value
  if:x:/@_dest
    !=:node:@"_dest
  value:x:?node"
    throw:Assert error, [apply] misbehaved


Single name and value
  _data
    foo:bar
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
      {value}:x:?value
  if:x:/@_dest
    !=:node:@"_dest
  name:foo
  value:bar"
    throw:Assert error, [apply] misbehaved


Multiple names in source
  _data
    foo1
    foo2
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
  if:x:/@_dest
    !=:node:@"_dest
  name:foo1
  name:foo2"
    throw:Assert error, [apply] misbehaved


Nested template datanodes
  _data
    foo:bar
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
        {value}:x:?value
  if:x:/@_dest
    !=:node:@"_dest
  name:foo
    value:bar"
    throw:Assert error, [apply] misbehaved


Nested template datanodes with multiple sources
  _data
    foo1:bar1
    foo2:bar2
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
        {value}:x:?value
  if:x:/@_dest
    !=:node:@"_dest
  name:foo1
    value:bar1
  name:foo2
    value:bar2"
    throw:Assert error, [apply] misbehaved


Template with static children
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      static1:static-value-1
        {name}:x:?name
          static2:static-value-2

  if:x:/@_dest
    !=:node:@"_dest
  static1:static-value-1
    name:foo
      static2:static-value-2"
    throw:Assert error, [apply] misbehaved


Template with sub-template
  _data
    foo
      bar
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
      {template}:x:/*
        {name}:x:?name
  if:x:/@_dest
    !=:node:@"_dest
  name:foo
  name:bar"
    throw:Assert error, [apply] misbehaved


Template with sub-template having static values
  _data
    foo
      bar
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
      {template}:x:/*
        static1
        {name}:x:?name
          static2
  if:x:/@_dest
    !=:node:@"_dest
  name:foo
  static1
  name:bar
    static2"
    throw:Assert error, [apply] misbehaved


Verify source is untouched
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {name}:x:?name
  if:x:/@_data
    !=:node:@"_data
  foo"
    throw:Assert error, [apply] misbehaved


Multiple sources
  _data1
    foo1:bar1
  _data2
    foo2:bar2
  _dest
  apply:x:/@_dest
    src:x:/@_data1/*
    src:x:/@_data2/*
    template
      result
        {name}:x:?name
        {value}:x:?value
  if:x:/@_dest
    !=:node:@"_dest
  result
    name:foo1
    value:bar1
  result
    name:foo2
    value:bar2"
    throw:Assert error, [apply] misbehaved


Multiple destinations
  _data
    foo:bar
  _dest1
  _dest2
  apply:x:/@_dest1|/@_dest2
    src:x:/@_data/*
    template
      {name}:x:?name
      {value}:x:?value
  if:x:/@_dest1
    !=:node:@"_dest1
  name:foo
  value:bar"
    or:x:/@_dest2
      !=:node:@"_dest2
  name:foo
  value:bar"
    throw:Assert error, [apply] misbehaved


Nested templates, multiple source values
  _data
    foo1
      name:John Doe
      adr
        str:Dunbar-1
        zip:987654-1
      adr
        str:Dunbar-2
        zip:987654-2
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      result
        {name}:x:/*/name?value
        {template}:x:/*/adr
          adr-x
            {str-x}:x:/*/str?value
            {zip-x}:x:/*/zip?value
  if:x:/@_dest
    !=:node:@"_dest
  result
    name:John Doe
    adr-x
      str-x:Dunbar-1
      zip-x:987654-1
    adr-x
      str-x:Dunbar-2
      zip-x:987654-2"
    throw:Assert error, [apply] misbehaved


Event source returning string
  _data
    foo
  _dest
  _x
    return:{0}-bar
      :x:/@_dn/#?name
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {@eval}:x:/@_x
  if:x:/@_dest
    !=:node:@"_dest
  foo-bar"
    throw:Assert error, [apply] misbehaved


Event source returning node
  _data
    foo
  _dest
  _x
    add:x:/+
      src:{0}-bar
        :x:/@_dn/#?name
    return
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {@eval}:x:/@_x
  if:x:/@_dest
    !=:node:@"_dest
  foo-bar"
    throw:Assert error, [apply] misbehaved


Dynamic event source returning node as children
  create-event:sys42.tests.dynamic-apply-source
    eval-x:x:/+/*
    return
      name:x:/@_dn/#?name
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {@sys42.tests.dynamic-apply-source}
  if:x:/@_dest
    !=:node:@"_dest
  name:foo"
    throw:Assert error, [apply] misbehaved


Dynamic event source returning multiple nodes with static arg
  create-event:sys42.tests.dynamic-apply-source
    eval-x:x:/+/*
    return
      name:x:/@_dn/#?name
      static:x:/@_arg?value
  _data
    foo
  _dest
  _static:some-arg
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {@sys42.tests.dynamic-apply-source}:x:/@_static?value
  if:x:/@_dest
    !=:node:@"_dest
  name:foo
  static:some-arg"
    throw:Assert error, [apply] misbehaved


Dynamic event with arg source returning multiple nodes
  create-event:sys42.tests.dynamic-apply-source
    eval-x:x:/+/*
    return
      name:x:/@_dn/#?name
      static:x:/@_foo?value
  _data
    foo
  _dest
  apply:x:/@_dest
    src:x:/@_data/*
    template
      {@sys42.tests.dynamic-apply-source}
        _foo:some-arg
  if:x:/@_dest
    !=:node:@"_dest
  name:foo
  static:some-arg"
    throw:Assert error, [apply] misbehaved


Complex multiple event template with argument
  _data
    foo1
      name:John Doe
      adr
        str:Dunbar
        zip:987654
    foo2
      name:Jane Doe
  _dest

  // Lambda callbacks for [apply] below.
  _x
    if:x:/@_dn/#/*/adr
      insert-before:x:/../0
        src:@"adr:{0}, {1}, {2}"
          :x:/@_static-arg?value
          :x:/@_dn/#/*/adr/*/str?value
          :x:/@_dn/#/*/adr/*/zip?value
      insert-before:x:/../1
        src:"has:address"
    else
      insert-before:x:/../1
        src:"no:address"
  _x2
    set:x:/..?value
      src:"second:eval-{0}"
        :x:/@_dn/#?name
  _x3
    set:x:/..?value
      src:node:"third:eval"

  // Notice, we have three [eval] invocations below, one with argument, two without.
  // One returning a list of nodes, another returning a static string, and a third returning a single node.
  apply:x:/@_dest
    src:x:/@_data/*
    template
      result
        {name}:x:/*/name?value
        {@eval}:x:/@_x
          _static-arg:Some address
        {@eval}:x:/@_x2
        {@eval}:x:/@_x3
  if:x:/@_dest
    !=:node:@"_dest
  result
    name:John Doe
    adr:Some address, Dunbar, 987654
    has:address
    second:eval-foo1
    third:eval
  result
    name:Jane Doe
    no:address
    second:eval-foo2
    third:eval"
    throw:Assert error, [apply] misbehaved
